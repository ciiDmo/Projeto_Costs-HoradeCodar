{"ast":null,"code":"var _jsxFileName = \"C:\\\\git-repos\\\\Aprendizado\\\\projeto_costs-hora_de_codar\\\\src\\\\components\\\\pages\\\\Project.js\",\n    _s = $RefreshSig$();\n\nimport { parse, v4 as uuidv4 } from 'uuid';\nimport styles from './Project.module.css';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Loading from '../layout/Loading';\nimport Container from '../layout/Container';\nimport ProjectForm from '../project/ProjectForm';\nimport Message from '../layout/Message';\nimport ServiceForm from '../service/ServiceForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Project() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [project, setProject] = useState([]);\n  const [services, setServices] = useState([]);\n  const [showProjectForm, setShowProjectForm] = useState(false);\n  const [showServiceForm, setShowServiceForm] = useState(false);\n  const [message, setMessage] = useState();\n  const [type, setType] = useState();\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(`http://localhost:5000/projects/${id}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(resp => resp.json()).then(data => {\n        setProject(data);\n        setServices(data.services);\n      }).catch(err => console.log);\n    }, 1000);\n  }, [id]);\n\n  function editPost(project) {\n    setMessage(''); //budget validatiion\n\n    if (project.budget < project.costs) {\n      setMessage('O orçamento não pode ser menor que o custo do projeto!');\n      setType('error');\n      return false;\n    }\n\n    fetch(`http://localhost:5000/projects/${project.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(project)\n    }).then(resp => resp.json()).then(data => {\n      setProject(data);\n      setShowProjectForm(false);\n      setMessage('Projeto atualizado!');\n      setType('success');\n    }).catch(err => console.log);\n  }\n\n  function createService(project) {\n    setMessage(''); //last service\n\n    const lastService = project.services[project.services.length - 1];\n    lastService.id = uuidv4();\n    const lastServiceCosts = lastService.costs;\n    const newCosts = parseFloat(project.costs) + parseFloat(lastServiceCosts); // maximum valuue validation\n\n    if (newCosts > parseFloat(project.budget)) {\n      setMessage('Orçamento ultrapassado! Verifique o valor do serviço.');\n      setType('error');\n      project.services.pop();\n      return false;\n    } // add service cost to total project cost\n\n\n    project.costs = newCosts; // update project\n\n    fetch(`http://localhost:5000/projects/${project.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(project)\n    }).then(resp => resp.json()).then(data => {\n      //exibir o serviço\n      console.log(data);\n    }).catch(err => console.log);\n  }\n\n  function toggleProjectForm() {\n    setShowProjectForm(!showProjectForm);\n  }\n\n  function toggleServiceForm() {\n    setShowServiceForm(!showServiceForm);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: project.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.project_details,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        customClass: \"column\",\n        children: [message && /*#__PURE__*/_jsxDEV(Message, {\n          type: type,\n          msg: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.details_container,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Projeto: \", project.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.btn,\n            onClick: toggleProjectForm,\n            children: !showProjectForm ? 'Editar Projeto' : 'Fechar'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this), !showProjectForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.project_info,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Categoria:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 41\n              }, this), project.category.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total de Or\\xE7amento:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 41\n              }, this), \"R$\", project.budget]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total Utilizado:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 41\n              }, this), \"R$\", project.costs]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.project_info,\n            children: /*#__PURE__*/_jsxDEV(ProjectForm, {\n              handleSubmit: editPost,\n              btnText: \"Concluir Edi\\xE7\\xE3o\",\n              projectData: project\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.service_form_container,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Adicione um servi\\xE7o:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.btn,\n            onClick: toggleServiceForm,\n            children: !showServiceForm ? 'Adicionar serviço' : 'Fechar'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.project_info,\n            children: showServiceForm && /*#__PURE__*/_jsxDEV(ServiceForm, {\n              handleSubmit: createService,\n              btnText: \"Adicionar Servi\\xE7o\",\n              projectData: project\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Servi\\xE7os\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          customClass: \"start\",\n          children: [services.length > 0 && services.map(service => /*#__PURE__*/_jsxDEV(ServiceCard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 37\n          }, this)), services.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"N\\xE3o h\\xE1 servi\\xE7os cadastrados.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(Project, \"Zkxc702a4ocwf3BogABZ7v61V7Y=\", false, function () {\n  return [useParams];\n});\n\n_c = Project;\nexport default Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["C:/git-repos/Aprendizado/projeto_costs-hora_de_codar/src/components/pages/Project.js"],"names":["parse","v4","uuidv4","styles","useParams","useState","useEffect","Loading","Container","ProjectForm","Message","ServiceForm","Project","id","project","setProject","services","setServices","showProjectForm","setShowProjectForm","showServiceForm","setShowServiceForm","message","setMessage","type","setType","setTimeout","fetch","method","headers","then","resp","json","data","catch","err","console","log","editPost","budget","costs","body","JSON","stringify","createService","lastService","length","lastServiceCosts","newCosts","parseFloat","pop","toggleProjectForm","toggleServiceForm","name","project_details","details_container","btn","project_info","category","service_form_container","map","service"],"mappings":"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","sourcesContent":["import {parse, v4 as uuidv4} from 'uuid'\r\n\r\nimport styles from './Project.module.css'\r\n\r\nimport {useParams} from 'react-router-dom'\r\nimport {useState, useEffect} from 'react'\r\n\r\nimport Loading from '../layout/Loading'\r\nimport Container from '../layout/Container'\r\nimport ProjectForm from '../project/ProjectForm'\r\nimport Message from '../layout/Message'\r\nimport ServiceForm from '../service/ServiceForm'\r\n\r\nfunction Project() {\r\n\r\n    const { id} = useParams()\r\n\r\n    const [project, setProject] = useState([])\r\n    const [services, setServices] = useState([])\r\n    const [showProjectForm, setShowProjectForm] = useState(false)    \r\n    const [showServiceForm, setShowServiceForm] = useState(false)\r\n    const [message, setMessage] = useState()\r\n    const [type, setType] = useState()\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            fetch(`http://localhost:5000/projects/${id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            })\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n            setProject(data)\r\n            setServices(data.services)\r\n            })\r\n            .catch((err) => console.log)\r\n        }, 1000)\r\n    }, [id])\r\n\r\n    function editPost(project) {\r\n        setMessage('')\r\n\r\n        //budget validatiion\r\n        if(project.budget < project.costs) {\r\n            setMessage('O orçamento não pode ser menor que o custo do projeto!')\r\n            setType('error')\r\n            return false\r\n        }\r\n\r\n        fetch (`http://localhost:5000/projects/${project.id}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(project),\r\n            })\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n            setProject(data)\r\n            setShowProjectForm(false)\r\n            setMessage('Projeto atualizado!')\r\n            setType('success')\r\n            })\r\n            .catch((err) => console.log)\r\n    }\r\n\r\n    function createService(project) {        \r\n        setMessage('')\r\n\r\n        //last service\r\n        const lastService = project.services[project.services.length -1]\r\n\r\n        lastService.id = uuidv4()\r\n        \r\n        const lastServiceCosts = lastService.costs\r\n\r\n        const newCosts = parseFloat(project.costs) + parseFloat(lastServiceCosts)\r\n\r\n        // maximum valuue validation\r\n\r\n        if(newCosts > parseFloat(project.budget)) {\r\n            setMessage('Orçamento ultrapassado! Verifique o valor do serviço.')\r\n            setType('error')\r\n            project.services.pop()\r\n            return false\r\n        }\r\n\r\n        // add service cost to total project cost\r\n        project.costs = newCosts\r\n\r\n        // update project\r\n        fetch (`http://localhost:5000/projects/${project.id}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(project)\r\n        })\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            //exibir o serviço\r\n            console.log(data)\r\n        })\r\n        .catch((err) => console.log)\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    function toggleProjectForm() {\r\n        setShowProjectForm(!showProjectForm)\r\n    }\r\n\r\n\r\n    function toggleServiceForm() {\r\n        setShowServiceForm(!showServiceForm)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {project.name ? (\r\n                <div className={styles.project_details}>\r\n                    <Container customClass=\"column\">\r\n                        {message && <Message type={type} msg={message} /> }\r\n                        <div className={styles.details_container}>\r\n                            <h1>Projeto: {project.name}</h1>\r\n                            <button className={styles.btn} onClick={toggleProjectForm}>\r\n                                {!showProjectForm ? 'Editar Projeto' : 'Fechar'}\r\n                            </button>\r\n                            {!showProjectForm ? (\r\n                                <div className={styles.project_info}>\r\n                                    <p>\r\n                                        <span>\r\n                                            Categoria:\r\n                                        </span> \r\n                                        {project.category.name}\r\n                                    </p>\r\n                                    <p>\r\n                                        <span>\r\n                                            Total de Orçamento:\r\n                                        </span> \r\n                                        R${project.budget}\r\n                                    </p>\r\n                                    <p>\r\n                                        <span>\r\n                                            Total Utilizado:\r\n                                        </span> \r\n                                        R${project.costs}\r\n                                    </p>\r\n                                </div>\r\n                            ) : (\r\n                                <div className={styles.project_info}>\r\n                                    <ProjectForm \r\n                                        handleSubmit={editPost} \r\n                                        btnText=\"Concluir Edição\" \r\n                                        projectData={project} \r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div className={styles.service_form_container}>\r\n                            <h2>Adicione um serviço:</h2>\r\n                            <button className={styles.btn} onClick={toggleServiceForm}>\r\n                                {!showServiceForm ? 'Adicionar serviço' : 'Fechar'}\r\n                            </button>\r\n                            <div className={styles.project_info}>\r\n                                {showServiceForm && (\r\n                                    <ServiceForm \r\n                                        handleSubmit={createService}\r\n                                        btnText='Adicionar Serviço'\r\n                                        projectData={project}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <h2>Serviços</h2>\r\n                        <Container customClass='start'>\r\n                            {services.length > 0 &&\r\n                                services.map((service) => (\r\n                                    <ServiceCard \r\n                                        \r\n                                    />\r\n                                ))\r\n                            }\r\n                            {services.length === 0 &&\r\n                                <p>Não há serviços cadastrados.</p>\r\n                            }\r\n                        </Container>\r\n                    </Container>\r\n                </div>\r\n            ): (\r\n                <Loading />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Project"]},"metadata":{},"sourceType":"module"}