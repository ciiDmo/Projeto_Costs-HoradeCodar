{"ast":null,"code":"var _jsxFileName = \"C:\\\\git-repos\\\\Aprendizado\\\\projeto_costs-hora_de_codar\\\\src\\\\components\\\\pages\\\\Projects.js\",\n    _s = $RefreshSig$();\n\nimport { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport styles from './Projects.module.css';\nimport Message from \"../layout/Message\";\nimport Container from '../layout/Container';\nimport Loading from '../layout/Loading';\nimport LinkButton from '../layout/LinkButton';\nimport ProjectCard from '../project/ProjectCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Projects() {\n  _s();\n\n  const [projects, setProjects] = useState([]);\n  const [removeLoading, setRemoveLoading] = useState(false);\n  const [projectMessage, setProjectMessage] = useState('');\n  const location = useLocation();\n  let message = '';\n\n  if (location.state) {\n    message = location.state.message;\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(\"http://localhost:5000/projects\", {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json'\n        }\n      }).then(resp => resp.json()).then(data => {\n        console.log(data);\n        setProjects(data);\n        setRemoveLoading(true);\n      }).catch(err => console.log(err));\n    }, 1000);\n  }, []);\n\n  function removeProject(id) {\n    fetch(`http://localhost:5000/projects/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(resp => resp.json()).then(data => {\n      setProjects(projects.filter(project => project.id !== id)); //mensagem de remoção\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.project_container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.title_container,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Meus Projetos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LinkButton, {\n        to: \"/newproject\",\n        text: \"Criar Projeto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n      type: \"success\",\n      msg: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      customClass: \"start\",\n      children: [projects.length > 0 && projects.map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n        name: project.name,\n        id: project.id,\n        budget: project.budget,\n        category: project.category.name,\n        handleRemove: removeProject\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 47\n      }, this)), !removeLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 36\n      }, this), removeLoading && projects.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"N\\xE3o h\\xE1 projetos cadastrados.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Projects, \"JGWfBv/vH0aVAJCVoU2aNm738Pw=\", false, function () {\n  return [useLocation];\n});\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["C:/git-repos/Aprendizado/projeto_costs-hora_de_codar/src/components/pages/Projects.js"],"names":["useLocation","useState","useEffect","styles","Message","Container","Loading","LinkButton","ProjectCard","Projects","projects","setProjects","removeLoading","setRemoveLoading","projectMessage","setProjectMessage","location","message","state","setTimeout","fetch","method","headers","then","resp","json","data","console","log","catch","err","removeProject","id","filter","project","project_container","title_container","length","map","name","budget","category"],"mappings":";;;AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,EAAD,CAApD;AAEA,QAAMe,QAAQ,GAAGhB,WAAW,EAA5B;AACA,MAAIiB,OAAO,GAAG,EAAd;;AACA,MAAID,QAAQ,CAACE,KAAb,EAAoB;AAChBD,IAAAA,OAAO,GAAGD,QAAQ,CAACE,KAAT,CAAeD,OAAzB;AACH;;AAEDf,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,UAAU,CACN,MAAM;AACFC,MAAAA,KAAK,CAAC,gCAAD,EAAmC;AAC5CC,QAAAA,MAAM,EAAE,KADoC;AAE5CC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAFmC,OAAnC,CAAL,CAMPC,IANO,CAMDC,IAAD,IAAUA,IAAI,CAACC,IAAL,EANR,EAOPF,IAPO,CAODG,IAAD,IAAU;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAf,QAAAA,WAAW,CAACe,IAAD,CAAX;AACAb,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,OAXO,EAYPgB,KAZO,CAYAC,GAAD,IAASH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAZR;AAaH,KAfK,EAeJ,IAfI,CAAV;AAkBH,GAnBQ,EAmBN,EAnBM,CAAT;;AAqBA,WAASC,aAAT,CAAuBC,EAAvB,EAA2B;AACvBZ,IAAAA,KAAK,CAAE,kCAAiCY,EAAG,EAAtC,EAAyC;AAC1CX,MAAAA,MAAM,EAAE,QADkC;AAE1CC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAFiC,KAAzC,CAAL,CAMCC,IAND,CAMOC,IAAD,IAAUA,IAAI,CAACC,IAAL,EANhB,EAOCF,IAPD,CAOOG,IAAD,IAAU;AACZf,MAAAA,WAAW,CAACD,QAAQ,CAACuB,MAAT,CAAiBC,OAAD,IAAaA,OAAO,CAACF,EAAR,KAAeA,EAA5C,CAAD,CAAX,CADY,CAEZ;AACH,KAVD,EAWCH,KAXD,CAWQC,GAAD,IAASH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAXhB;AAaH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAE3B,MAAM,CAACgC,iBAAvB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEhC,MAAM,CAACiC,eAAvB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,aAAf;AAA6B,QAAA,IAAI,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAKKnB,OAAO,iBAAI,QAAC,OAAD;AAAS,MAAA,IAAI,EAAC,SAAd;AAAwB,MAAA,GAAG,EAAEA;AAA7B;AAAA;AAAA;AAAA;AAAA,YALhB,eAMI,QAAC,SAAD;AAAW,MAAA,WAAW,EAAC,OAAvB;AAAA,iBACKP,QAAQ,CAAC2B,MAAT,GAAkB,CAAlB,IACG3B,QAAQ,CAAC4B,GAAT,CAAcJ,OAAD,iBAAa,QAAC,WAAD;AACtB,QAAA,IAAI,EAAEA,OAAO,CAACK,IADQ;AAEtB,QAAA,EAAE,EAAEL,OAAO,CAACF,EAFU;AAGtB,QAAA,MAAM,EAAEE,OAAO,CAACM,MAHM;AAItB,QAAA,QAAQ,EAAEN,OAAO,CAACO,QAAR,CAAiBF,IAJL;AAMtB,QAAA,YAAY,EAAER;AANQ,SAKjBG,OAAO,CAACF,EALS;AAAA;AAAA;AAAA;AAAA,cAA1B,CAFR,EAWK,CAACpB,aAAD,iBAAkB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAXvB,EAYKA,aAAa,IAAIF,QAAQ,CAAC2B,MAAT,KAAoB,CAArC,iBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbR;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GAzEQ5B,Q;UAKYT,W;;;KALZS,Q;AA2ET,eAAeA,QAAf","sourcesContent":["import {useLocation} from 'react-router-dom'\r\nimport {useState, useEffect} from 'react'\r\n\r\nimport styles from './Projects.module.css'\r\n\r\nimport Message from \"../layout/Message\"\r\nimport Container from '../layout/Container'\r\nimport Loading from '../layout/Loading'\r\nimport LinkButton from '../layout/LinkButton'\r\nimport ProjectCard from '../project/ProjectCard'\r\n\r\nfunction Projects() {\r\n    const [projects, setProjects] = useState([])\r\n    const [removeLoading, setRemoveLoading] = useState(false)\r\n    const [projectMessage, setProjectMessage] = useState('')\r\n\r\n    const location = useLocation()\r\n    let message = ''\r\n    if (location.state) {\r\n        message = location.state.message\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(\r\n            () => {\r\n                fetch(\"http://localhost:5000/projects\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n        })\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            console.log(data)\r\n            setProjects(data)\r\n            setRemoveLoading(true)\r\n        })\r\n        .catch((err) => console.log(err))\r\n            },1000\r\n        )\r\n                \r\n    }, [])\r\n\r\n    function removeProject(id) {        \r\n        fetch(`http://localhost:5000/projects/${id}`, { \r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n        })\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            setProjects(projects.filter((project) => project.id !== id))\r\n            //mensagem de remoção\r\n        })\r\n        .catch((err) => console.log(err))\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={styles.project_container}>\r\n            <div className={styles.title_container}>\r\n                <h1>Meus Projetos</h1>\r\n                <LinkButton to=\"/newproject\" text=\"Criar Projeto\" />\r\n            </div>\r\n            {message && <Message type=\"success\" msg={message} />}\r\n            <Container customClass=\"start\">\r\n                {projects.length > 0 &&\r\n                    projects.map((project) => <ProjectCard \r\n                        name={project.name}\r\n                        id={project.id}\r\n                        budget={project.budget}\r\n                        category={project.category.name}\r\n                        key={project.id}\r\n                        handleRemove={removeProject}\r\n                    />)\r\n                }\r\n                {!removeLoading && <Loading />}\r\n                {removeLoading && projects.length === 0 && (\r\n                    <p>Não há projetos cadastrados.</p>\r\n                )}\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects"]},"metadata":{},"sourceType":"module"}